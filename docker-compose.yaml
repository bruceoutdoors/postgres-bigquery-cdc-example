version: '3'
services:
  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    expose:
      - 2181
      - 2888
      - 3888
    networks:
      - dbz-net
    volumes:
      - zookeeper-data-volume:/zookeeper/data
      - zookeeper-txns-volume:/zookeeper/txns

  kafka:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
      - 9092:9092
    networks:
      - dbz-net
    volumes:
      - kafka-data-volume:/kafka/data
    # kafka may self-destruct (ERR "node already exists") - restart until it lives again
    restart: on-failure
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181

  schema-registry:
    image: confluentinc/cp-schema-registry
    ports:
      - 8081:8081
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081
    networks:
      - dbz-net

  connect:
    image: debezium/connect:${DEBEZIUM_VERSION}
    ports:
      - 8083:8083
    networks:
      - dbz-net
    # connect may self-destruct cause kafka can - also restart until it lives again
    restart: on-failure
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
      - VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      - INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081

  kafpubsub:
    image: bruceoutdoor/kafpubsub
    networks:
      - dbz-net
    environment:
      - PUBSUB_EMULATOR_HOST=pubsub:8085
      - BOOTSTRAP_SERVERS=kafka:9092
      - INPUT_TOPIC=dbserver1.inventory.customers
      - PROJECT_ID=crafty-apex-264713
      - AUTO_OFFSET_RESET_CONFIG=latest

  # ** Here on are outside the debezium setup **
  postgres:
    image: debezium/example-postgres:${DEBEZIUM_VERSION}
    ports:
      - 5432:5432
    networks:
      - dbz-net
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  jobmanager:
    image: ${FLINK_DOCKER_IMAGE_NAME:-flink}
    network_mode: "host"
    expose:
      - 6123
    ports:
      - 8082:8082
    # Flink writes history as flink user. Need chown to change folder from root to flink
    # NOTE: history server is a separate REST service 
    entrypoint: /bin/bash -c "
        chown flink:flink /opt/flink/history/
        && /docker-entrypoint.sh jobmanager
        "
    volumes:
      - flink-history-volume:/opt/flink/history
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: localhost
        rest.bind-port: 8082
        jobmanager.archive.fs.dir: file:///opt/flink/history
        historyserver.archive.fs.refresh-interval: 10000
        historyserver.web.port: 8086

  taskmanager:
    image: ${FLINK_DOCKER_IMAGE_NAME:-flink}
    network_mode: "host"
    expose:
      - 6121
      - 6122
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: localhost

networks:
  dbz-net:

volumes:
  zookeeper-txns-volume:
  zookeeper-data-volume:
  kafka-data-volume:
  postgres-volume:
  flink-history-volume:
