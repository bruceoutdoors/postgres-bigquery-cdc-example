version: '3'
services:
  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    expose:
      - 2181
      - 2888
      - 3888
    networks:
      - dbz-net
    volumes:
      - zookeeper-data-volume:/zookeeper/data
      - zookeeper-txns-volume:/zookeeper/txns

  kafka:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
      - 9092:9092
    networks:
      - dbz-net
    volumes:
      - kafka-data-volume:/kafka/data
    # kafka may self-destruct (ERR "node already exists") - restart until it lives again
    restart: on-failure
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181

  connect:
    image: bruceoutdoor/dbz-connect-with-pubsub:${DEBEZIUM_VERSION}
    ports:
      - 8083:8083
    networks:
      - dbz-net
    # connect may self-destruct cause kafka can - also restart until it lives again
    restart: on-failure
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - PUBSUB_EMULATOR_HOST=pubsub:8085
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses

  # kafpubsub:
  #   image: bruceoutdoor/kafpubsub
  #   networks:
  #     - dbz-net
  #   command: python kafpubsub.py --bootstrap-server kafka:9092 --topic dbserver1.inventory.customers
  #   environment:
  #     - PUBSUB_EMULATOR_HOST=pubsub:8085
  #     - LOGLEVEL=DEBUG

  # ** Here on are outside the debezium setup **
  postgres:
    image: debezium/example-postgres:${DEBEZIUM_VERSION}
    ports:
      - 5432:5432
    networks:
      - dbz-net
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  pubsub:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk
    ports:
      - 8085:8085
    networks:
      - dbz-net
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085

networks:
  dbz-net:

volumes:
  zookeeper-txns-volume:
  zookeeper-data-volume:
  kafka-data-volume:
  postgres-volume:
